"use strict";function _createForOfIteratorHelper(r,e){var t;if("undefined"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(t=_unsupportedIterableToArray(r))||e&&r&&"number"==typeof r.length){t&&(r=t);var n=0,e=function(){};return{s:e,n:function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}},e:function(r){throw r},f:e}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,a=!0,i=!1;return{s:function(){t=r[Symbol.iterator]()},n:function(){var r=t.next();return a=r.done,r},e:function(r){i=!0,o=r},f:function(){try{a||null==t.return||t.return()}finally{if(i)throw o}}}}function _unsupportedIterableToArray(r,e){if(r){if("string"==typeof r)return _arrayLikeToArray(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,e):void 0}}function _arrayLikeToArray(r,e){(null==e||e>r.length)&&(e=r.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=r[t];return n}function removeFieldError(r){r=r.nextElementSibling;null!==r&&r.classList.contains("form-error-text")&&r.remove()}function createFieldError(r,e){removeFieldError(r);var t=document.createElement("div");t.classList.add("form-error-text"),t.innerText=e,null===r.nextElementSibling?r.parentElement.appendChild(t):r.nextElementSibling.classList.contains("form-error-text")||r.parentElement.insertBefore(t,r.nextElementSibling)}function toggleErrorField(r,e){r=r.nextElementSibling;null!==r&&r.classList.contains("form-error-text")&&(r.style.display=e?"block":"none",r.setAttribute("aria-hidden",e))}function markFieldAsError(r,e){e?r.classList.add("field-error"):(r.classList.remove("field-error"),toggleErrorField(r,!1))}var form=document.querySelector("#contactForm"),inputs=form.querySelectorAll("[required]");form.setAttribute("novalidate",!0);var _step,_iterator=_createForOfIteratorHelper(inputs);try{for(_iterator.s();!(_step=_iterator.n()).done;){var el=_step.value;el.addEventListener("input",function(r){return markFieldAsError(r.target,!r.target.checkValidity())})}}catch(r){_iterator.e(r)}finally{_iterator.f()}form.addEventListener("submit",function(r){r.preventDefault();var e,t,n,o=!1,a=_createForOfIteratorHelper(inputs);try{for(a.s();!(i=a.n()).done;){var i=i.value;markFieldAsError(i,!1),toggleErrorField(i,!1),i.checkValidity()||(markFieldAsError(i,!0),toggleErrorField(i,!0),o=!0)}}catch(r){a.e(r)}finally{a.f()}o||((e=form.querySelector("[type=submit]")).disabled=!0,e.classList.add("loading"),t=new FormData(form),n=form.getAttribute("action"),r=form.getAttribute("method"),fetch(n,{method:r.toUpperCase(),body:t}).then(function(r){return r.json()}).then(function(r){if(r.errors){var e=r.errors.map(function(r){return'[name="'.concat(r,'"]')}),t=_createForOfIteratorHelper(form.querySelectorAll(e.join(",")));try{for(t.s();!(n=t.n()).done;){var n=n.value;markFieldAsError(n,!0),toggleErrorField(n,!0)}}catch(r){t.e(r)}finally{t.f()}}else r.status,r.status}).catch(function(){e.disabled=!1,e.classList.remove("loading")}))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
